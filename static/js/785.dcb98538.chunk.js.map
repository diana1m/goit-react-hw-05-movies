{"version":3,"file":"static/js/785.dcb98538.chunk.js","mappings":"wNAyCA,UArCgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,IAbAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,gHAEQC,EAAAA,EAAAA,IAAaJ,GAFrB,gBAEPK,EAFO,EAEPA,KACRR,EAAWQ,EAAKC,SAHD,gDAKfP,EAAS,KAAMQ,SALA,yDAAH,qDASpBJ,GACH,GAAE,CAACH,IAECJ,EAEL,OACI,2BACKE,IAAS,uCAAeA,MAEvBF,EAAQY,SAAU,wEAEpB,wBACKZ,EAAQa,KAAI,SAAAC,GAAM,OAAG,2BAClB,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFgBF,EAAOG,GAAnB,QAOhC,C,8LCrCGC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAA8BC,EAA9B,+BAAqC,EAClCC,EAAO,CACTC,IAAI,GAAD,OAAKJ,EAAL,uBACHK,OAAQ,CACJC,QAASP,EACTG,KAAMA,IALX,UAQoBK,EAAAA,EAAAA,GAAMJ,GAR1B,cAQGK,EARH,yBASIA,GATJ,mEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,8FAAkCR,EAAlC,+BAAyC,EACtCS,EAAS,CACXP,IAAI,GAAD,OAAKJ,EAAL,iBACHK,OAAQ,CACJC,QAASP,EACTa,SAAU,QACVV,KAAMA,EACNW,MAAOH,IAPZ,UAUoBH,EAAAA,EAAAA,GAAMI,GAV1B,cAUGH,EAVH,yBAWIA,GAXJ,mEAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gFACGJ,EAAS,CACXP,IAAI,GAAD,OAAKJ,EAAL,kBAAuBe,GAC1BV,OAAQ,CACJC,QAASP,EACTa,SAAU,UALf,UAQoBL,EAAAA,EAAAA,GAAMI,GAR1B,cAQGH,EARH,yBASIA,GATJ,kEAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA6BD,GAA7B,gFACGJ,EAAS,CACXP,IAAI,GAAD,OAAKJ,EAAL,kBAAuBe,EAAvB,YACHV,OAAQ,CACJC,QAASP,EACTa,SAAU,UALf,UAQoBL,EAAAA,EAAAA,GAAMI,GAR1B,cAQGH,EARH,yBASIA,GATJ,kEAYA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA6B0B,GAA7B,gFACGJ,EAAS,CACXP,IAAI,GAAD,OAAKJ,EAAL,kBAAuBe,EAAvB,YACHV,OAAQ,CACJC,QAASP,EACTa,SAAU,QACVV,KAAM,IANX,UASoBK,EAAAA,EAAAA,GAAMI,GAT1B,cASGH,EATH,yBAUIA,GAVJ,kE","sources":["components/Reviews/Reviews.js","services/getMovie.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieReviews } from 'services/getMovie';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState(null);\n    const [error, setError] = useState(null);\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const getReviewsInfo = async () => {\n            try {\n                const { data } = await movieReviews(movieId);\n                setReviews(data.results);\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n\n        getReviewsInfo();\n    }, [movieId]);\n    \n    if (!reviews) return;\n\n    return (\n        <div>\n            {error && <p>Ooooops... {error}</p>}\n\n            {!reviews.length && <p>\"We don't have any reviews for this movie\"</p>}\n\n            <ul>\n                {reviews.map(review=> <li key={review.id}>\n                    <p>Author: {review.author}</p>\n                    <p>{review.content}</p>\n                </li>)}\n            </ul>\n        </div>\n    ) \n  };\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = \"f74d35c77cf5d32effd7c6bb9dddc2ef\";\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function trendingMovies(page = 1) {\n    const resp = {\n        url: `${BASE_URL}/trending/movie/day`,\n        params: {\n            api_key: API_KEY,\n            page: page,\n        }\n    }\n    const response = await axios(resp);\n    return response;\n}\n\nexport async function searchMovie (name, page = 1){\n    const config = {\n        url: `${BASE_URL}/search/movie`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: page,\n            query: name\n        }\n    }\n    const response = await axios(config);\n    return response;\n};\n\nexport async function movieById (movie_id){\n    const config = {\n        url: `${BASE_URL}/movie/${movie_id}`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n    const response = await axios(config);\n    return response;\n};\n\nexport async function movieCredits (movie_id){\n    const config = {\n        url: `${BASE_URL}/movie/${movie_id}/credits`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n    const response = await axios(config);\n    return response;\n};\n\nexport async function movieReviews (movie_id) {\n    const config = {\n        url: `${BASE_URL}/movie/${movie_id}/reviews`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: 1,\n        }\n    }\n    const response = await axios(config);\n    return response; \n};"],"names":["useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","getReviewsInfo","movieReviews","data","results","message","length","map","review","author","content","id","API_KEY","BASE_URL","trendingMovies","page","resp","url","params","api_key","axios","response","searchMovie","name","config","language","query","movieById","movie_id","movieCredits"],"sourceRoot":""}